import React from 'react';
import {Button, Header, Modal} from 'semantic-ui-react';
import {connect} from 'react-redux';
import styles from "./AlignmentPicker.css";
import {selectAlignment, setModalVisibility} from '../state/characterInfoActions';


class AlignmentPicker extends React.PureComponent {

  state = {
    isHovered: undefined
  };

  handleClose = () => this.props.setModalVisibility(false);

  onMouseOver = (name) => {
    this.setState({
      isHovered: name
    })
  };

  select = (name) => {
    this.props.selectAlignment(name);
  };

  alignments = [
    {
      path: "M 9.1553224,7.019806 C 8.1253028,5.6000099 7.6628251,4.9547731 7.6628251,4.9375127 c 0,-0.039827 1.7967841,-4.93181652 1.811412,-4.93181652 0.00837,0 0.4241976,1.12003032 0.9240579,2.48895622 l 0.908837,2.4889562 -0.885522,1.206397 C 9.9345718,6.8535242 9.5237389,7.4127396 9.508647,7.4327069 9.4866397,7.4618234 9.4166895,7.3800786 9.1553224,7.019806 Z",
      color: "#e8e3ba",
      label: "Good"
    },
    {
      path: "M 6.5872887,7.4282545 5.2980243,6.9969742 3.7642547,4.5772256 C 2.9206813,3.246364 2.2350649,2.1529046 2.2406624,2.1473158 c 0.0056,-0.0056 1.0949509,0.6752728 2.4207852,1.5130256 L 7.0720555,5.1835286 7.3224659,5.9649317 C 7.460192,6.3947032 7.6541194,6.9976963 7.7534158,7.3049163 7.8573951,7.6266246 7.9217841,7.8626578 7.9052542,7.8615166 7.8894684,7.8604272 7.296384,7.6654589 6.5872887,7.4282545 Z",
      color: "#f6cd36",
      label: "Chaotic Good"
    },
    {
      path: "M 2.5274936,10.314263 C 1.1620681,9.8163499 0.05899363,9.4010928 0.07621718,9.3914692 0.16074551,9.3442394 5.0290179,7.5851389 5.0562639,7.59198 5.1207593,7.6081743 7.5131698,9.4036765 7.4940897,9.4215667 7.4831771,9.431803 6.9763815,9.7989972 6.3678857,10.237555 5.75939,10.676114 5.2049548,11.076474 5.1358077,11.127247 l -0.1257223,0.0923 z",
      color: "#98292a",
      label: "Chaotic Neutral"
    },
    {
      path: "M 10.117835,11.26771 C 9.7773121,10.791707 9.4883199,10.395844 9.4756323,10.388015 c -0.012687,-0.0078 -0.3097811,0.373886 -0.6602074,0.848259 -0.3504262,0.474371 -0.6399934,0.855617 -0.6434828,0.847212 -0.00349,-0.0084 0.1455432,-0.469915 0.3311837,-1.025577 0.1856404,-0.555661 0.3263943,-1.010293 0.3127865,-1.010293 -0.013609,0 -0.4716393,0.142433 -1.0178479,0.316518 -0.5462085,0.174085 -0.9967251,0.312476 -1.0011478,0.307534 -0.00442,-0.0049 0.3516462,-0.267584 0.7912638,-0.583649 C 8.0277984,9.7719527 8.4171218,9.4895238 8.4533439,9.4603986 L 8.5192022,9.4074432 7.6728147,8.7809267 C 7.2073016,8.4363425 6.8364871,8.151062 6.8487824,8.1469702 6.8610778,8.1428781 7.3115933,8.2862257 7.849928,8.4655201 8.3882626,8.6448146 8.8330735,8.7871618 8.8383967,8.7818469 8.8437198,8.7765322 8.7054735,8.3288191 8.5311828,7.7869289 8.356892,7.2450388 8.2178109,6.791129 8.222114,6.7782405 c 0.0043,-0.012888 0.2847345,0.3610488 0.6231814,0.8309715 0.338447,0.4699227 0.6217975,0.8549441 0.629668,0.8556032 0.00787,6.589e-4 0.2839873,-0.3661168 0.6135936,-0.8150573 0.329607,-0.4489404 0.603247,-0.812298 0.608091,-0.8074614 0.0049,0.00485 -0.138795,0.4413443 -0.319198,0.9700171 -0.180404,0.5286728 -0.322307,0.9669148 -0.31534,0.9738712 0.007,0.00695 0.478346,-0.1305177 1.047507,-0.3054981 0.56916,-0.1749804 1.043961,-0.3148234 1.055112,-0.3107624 0.01116,0.00406 -0.364377,0.2837126 -0.834505,0.6214477 -0.470128,0.3377352 -0.859702,0.6220153 -0.865718,0.6317337 -0.006,0.00971 0.368621,0.298101 0.832525,0.6408503 0.463904,0.342749 0.834454,0.626179 0.823444,0.629843 -0.01104,0.0036 -0.460473,-0.140034 -0.998807,-0.319327 -0.538335,-0.179295 -0.984124,-0.320665 -0.990644,-0.314156 -0.0065,0.0065 0.130615,0.472107 0.304741,1.034663 0.174126,0.562556 0.31313,1.026285 0.3089,1.03051 -0.0041,0.0041 -0.286305,-0.381775 -0.62683,-0.857779 z",
      color: "#dbe3db",
      label: "Neutral"
    },
    {
      path: "m 10.988171,7.8572218 c 0.0064,-0.017259 0.207435,-0.607536 0.446718,-1.3117256 0.239283,-0.7041896 0.447501,-1.2941616 0.462709,-1.3110491 0.03563,-0.039558 4.902323,-3.114777 4.914141,-3.105198 0.0064,0.00514 -3.049879,4.8563686 -3.103916,4.9269297 -0.0087,0.011259 -2.681687,0.8324045 -2.709762,0.8324155 -0.01185,4.9e-6 -0.0163,-0.014112 -0.0099,-0.031373 z",
      color: "#4e80bb",
      label: "Lawful Good"
    },
    {
      path: "M 12.729161,10.385362 C 12.065495,9.8945486 11.508258,9.4788777 11.490853,9.4616492 c -0.02536,-0.025092 0.213064,-0.2071727 1.198296,-0.915157 0.67647,-0.4861079 1.245145,-0.8838325 1.263723,-0.8838325 0.04819,0 4.949524,1.7883587 4.949524,1.8059419 0,0.014897 -4.903416,1.8091494 -4.94413,1.8091494 -0.01235,0 -0.565441,-0.401576 -1.229105,-0.892389 z",
      color: "#5a8733",
      label:  "Lawful Neutral"
    },
    {
      path: "m 14.362458,15.21609 c -1.368365,-0.856982 -2.496725,-1.566416 -2.507465,-1.576518 -0.02623,-0.02468 -0.83064,-2.638527 -0.816383,-2.652759 0.0061,-0.0062 0.609083,0.189735 1.339834,0.435298 l 1.328639,0.446478 0.385981,0.589524 c 1.336601,2.041451 2.781905,4.291592 2.766465,4.307009 -0.005,0.005 -1.128705,-0.69205 -2.497071,-1.549032 z",
      color: "#6719d0",
      label:  "Lawful Evil"
    },
    {
      path: "M 8.4998287,16.385195 7.5892929,13.888821 8.4844992,12.677429 c 0.4923635,-0.666265 0.9141381,-1.231565 0.9372772,-1.256223 0.039811,-0.04243 0.089834,0.02161 0.9314296,1.192478 0.489148,0.680519 0.888951,1.254255 0.888451,1.274965 -0.0011,0.04471 -1.7900557,4.950316 -1.8144887,4.975559 -0.00925,0.0096 -0.4265449,-1.106006 -0.9273396,-2.479013 z",
      color: "#383043",
      label: "Evil"
    },
    {
      path: "m 2.15619,16.691909 c 0,-0.009 3.036606,-4.819063 3.0825812,-4.882804 0.00333,-0.0047 0.5868812,-0.193795 1.2967755,-0.42039 0.7098946,-0.226594 1.3097771,-0.418216 1.3330725,-0.425828 0.032148,-0.01041 -0.066505,0.311575 -0.4094433,1.336715 l -0.4517983,1.350552 -2.4051567,1.518839 c -1.3228362,0.835365 -2.4143534,1.522608 -2.4255938,1.52721 -0.011242,0.0047 -0.020436,0.0025 -0.020436,-0.0044 z",
      color: "#550022",
      label: "Chaotic Evil"
    },
  ];

  render() {
    return (
      <Modal
        trigger={<Button onClick={this.handleOpen}>Show Modal</Button>}
        open={this.props.modalOpen}
        onClose={this.handleClose}
        basic
        size='small'
      >
        <Header content='Choose Alignment'/>
        <Modal.Content>
          <svg
            id="Alignment"
            x="0px"
            y="0px"
            viewBox="0 0 18.908 18.908"
            width="600"
            height="600"
            style={{ padding: 100 }}
          >
            <g>
              {this.alignments.map((value) => (
                <path
                  style={{fill: value.color, strokeWidth: 1.13701034}}
                  d={value.path}
                  className={styles.alignmentElement}
                  onMouseOver={() => {this.onMouseOver(value.label)}}
                  onClick={() => this.select(value.label)}
                />
              ))}
            </g>
          </svg>
          <div
            style={{ width: 600, padding: 100 }}
          >
            <h4 style={{textAlign: 'center'}}>{this.state.isHovered || "Choose Alignment"}</h4>
          </div>
        </Modal.Content>
      </Modal>
    )
  }
}

const mapStateToProps = (state) => ({
  modalOpen: state.homePageReducer.characterInfoReducer.alignmentModalVisible
});

const mapDispatchToProps = (dispatch) => ({
  selectAlignment: (name) => dispatch(selectAlignment(name)),
  setModalVisibility: (visible) => dispatch(setModalVisibility(visible))
});

export default connect(mapStateToProps, mapDispatchToProps)(AlignmentPicker);
